{
    "env": {
        "es6": true,
        "node": true,
        "jest/globals": true
    },
    "root": true,
    "extends": [
        "airbnb-base",
        "eslint:recommended",
        "plugin:@typescript-eslint/recommended",
        "plugin:unicorn/recommended",
        "plugin:jest/recommended"
        //   "prettier",
        //   "plugin:prettier/recommended"
    ],
    "globals": {
        "message": "readonly",
        "SharedArrayBuffer": "readonly"
    },
    "parser": "@typescript-eslint/parser",
    "parserOptions": {
        "ecmaVersion": 11,
        "sourceType": "module",
        "project": ["tsconfig.json"]
    },
    "plugins": [
        "@typescript-eslint",
        //   "eslint-plugin-prettier",
        "eslint-plugin-import-helpers",
        "eslint-plugin-jest"
    ],
    "rules": {
        "semi": ["error", "never"],
        "quotes": ["error", "single", { "allowTemplateLiterals": true }],
        "no-new": "off",
        "indent": ["error", 4],
        "no-prototype-builtins": "off",
        "no-restricted-syntax": "off",
        "max-classes-per-file": "off",
        "@typescript-eslint/no-explicit-any": "off",
        "no-console": "off",
        "import/prefer-default-export": "off",
        "@typescript-eslint/explicit-function-return-type": ["off"],
        "@typescript-eslint/no-unused-vars": [
            "error",
            {
                "argsIgnorePattern": "_"
            }
        ],
        "no-useless-constructor": "off",
        "unicorn/filename-case": [
            "error",
            {
                "cases": {
                    "camelCase": true,
                    "pascalCase": true,
                    "kebabCase": true
                }
            }
        ],
        "@typescript-eslint/naming-convention": [
            "error",
            {
                "selector": "default",
                "format": ["camelCase"]
            },
            {
                "selector": "interface",
                "format": ["PascalCase"],
                "custom": {
                    "regex": "^I[A-Z]",
                    "match": true
                }
            },
            {
                "selector": "typeAlias",
                "format": ["PascalCase"],
                "custom": {
                    "regex": "^T[A-Z]",
                    "match": true
                }
            },
            {
                "selector": "classProperty",
                "format": ["PascalCase", "snake_case"]
            },
            {
                "selector": "class",
                "format": ["PascalCase"],
                "custom": {
                    "regex": "^[A-Z]",
                    "match": true
                }
            },
            {
                "selector": "variable",
                "format": ["PascalCase", "UPPER_CASE"],
                "types": ["boolean"],
                "prefix": ["is", "should", "has", "can", "did", "will"]
            },
            {
                "selector": "variableLike",
                "format": ["camelCase", "UPPER_CASE", "PascalCase"]
            },

            {
                "selector": "parameter",
                "format": ["camelCase"],
                "leadingUnderscore": "allow"
            },
            {
                "selector": "memberLike",
                "modifiers": ["private"],
                "format": ["camelCase"],
                "leadingUnderscore": "forbid"
            },
            {
                "selector": "property",
                "modifiers": ["readonly"],
                "format": ["PascalCase", "camelCase", "snake_case"]
            },
            {
                "selector": "enumMember",
                "format": ["UPPER_CASE"]
            }
        ],
        "@typescript-eslint/explicit-module-boundary-types": [
            "warn",
            {
                "allowArgumentsExplicitlyTypedAsAny": true
            }
        ],
        "no-underscore-dangle": "off",
        "@typescript-eslint/camelcase": "off",
        //   "prettier/prettier": ["warn", {"singleQuote": true, "parser": "flow", "semi": false}],
        // "lines-between-class-members": "off",
        "no-spaced-func": "error",
        "arrow-body-style": "off",
        "prefer-arrow-callback": "off",
        "class-methods-use-this": "off",
        "import/extensions": [
            "error",
            "ignorePackages",
            {
                "ts": "never"
            }
        ],
        "import-helpers/order-imports": [
            "warn",
            {
                "newlinesBetween": "always", // new line between groups
                "groups": [
                    "module",
                    "/^@server/shared/",
                    "/^@/",
                    ["parent", "sibling", "index"]
                ],
                "alphabetize": { "order": "asc", "ignoreCase": true }
            }
        ]
    },
    "settings": {
        "import/resolver": {
            "typescript": {
                "project": "./tsconfig.json"
            }
        }
    }
}
